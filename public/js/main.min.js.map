{"version":3,"sources":["main.js","nav.js","popup.js"],"names":["$","on","toggleClass","BOUNDS_RUSSIA","L","LatLngBounds","window","width","mapbox","accessToken","map","doubleClickZoom","zoomControl","zoomDelta","zoomSnap","maxZoom","minZoom","setView","addLayer","styleLayer","fitBounds","padding","southWest","latLng","northEast","bounds","latLngBounds","setMaxBounds","panInsideBounds","animate","hideNavList","removeClass","slideUp","this","addClass","slideToggle","document","click","e","target","closest","length","event","stopPropagation","show","popup","attr","hasClass"],"mappings":"AAAAA,EAAA,WAEAA,EAAA,uBAAAC,GAAA,QAAA,WACAD,EAAA,uBAAAE,YAAA,YAGA,IACAC,EAAA,IAAAC,EAAAC,aAAA,CAAA,GAAA,IAAA,CAAA,GAAA,MACAL,EAAAM,QAAAC,QAAA,MACAJ,EAAA,IAAAC,EAAAC,aAAA,CAAA,GAAA,IAAA,CAAA,GAAA,OAGAD,EAAAI,OAAAC,YAAA,4FAEA,IAAAC,EAAAN,EAAAM,IAAA,MAAA,CACAC,iBAAA,EACAC,aAAA,EACAC,UAAA,IACAC,SAAA,EACAC,QAAA,GACAC,QAAA,IAKAC,QAAA,CAAA,UAAA,WAnBA,GAoBAC,SAAAd,EAAAI,OAAAW,WAAA,sDAEAT,EAAAU,UAAAjB,EAAA,CAAAkB,QAAA,CAAA,GAAA,MAEA,IAAAC,EAAAlB,EAAAmB,QAAA,mBAAA,KACAC,EAAApB,EAAAmB,OAAA,kBAAA,KACAE,EAAArB,EAAAsB,aAAAJ,EAAAE,GAEAd,EAAAiB,aAAAF,GACAf,EAAAT,GAAA,OAAA,WACAS,EAAAkB,gBAAAH,EAAA,CAAAI,SAAA,QCpCA7B,EAAA,WAIA,SAAA8B,IACA9B,EAAA,oBAAA+B,YAAA,UACA/B,EAAA,sBAAAgC,UAIAhC,EAAA,8BAAAC,GAAA,QAAA,WACAD,EAAA,8BAAA+B,YAAA,UACA/B,EAAAiC,MAAAC,SAAA,UACAlC,EAAAM,QAAAC,SAZA,KAaAuB,MAKA9B,EAAA,oBAAAC,GAAA,QAAA,WACAD,EAAA,oBAAAE,YAAA,UACAF,EAAA,sBAAAmC,gBAIAnC,EAAAoC,UAAAC,MAAA,SAAAC,GACA,GAAAtC,EAAAM,QAAAC,SAzBA,IAyBA,CACA,GAAAP,EAAAsC,EAAAC,QAAAC,QAAA,sBAAAC,OAAA,OACA,GAAAzC,EAAAsC,EAAAC,QAAAC,QAAA,oBAAAC,OAAA,OACAX,IACAY,MAAAC,qBAKA3C,EAAAM,QAAAL,GAAA,SAAA,WAlCA,IAmCAD,EAAAM,QAAAC,SACAP,EAAA,sBAAA4C,OACA5C,EAAA,oBAAA+B,YAAA,WAEAD,QCxCA9B,EAAA,WAGAA,EAAA,8BAAAC,GAAA,QAAA,WACA,IAAA4C,EAAA7C,EAAAiC,MAAAa,KAAA,cACA9C,EAAA,OAAA6C,GAAAE,SAAA,UACA/C,EAAA,UAAA+B,YAAA,QACA/B,EAAA,uBAAA+B,YAAA,QACA/B,EAAA,OAAA6C,GAAAX,SAAA,QACAlC,EAAA,uBAAAkC,SAAA,WAIAlC,EAAA,iBAAAC,GAAA,QAAA,WACAD,EAAA,UAAA+B,YAAA,QACA/B,EAAA,uBAAA+B,YAAA,QACA/B,EAAA,8BAAA+B,YAAA,YAIA/B,EAAAoC,UAAAC,MAAA,SAAAC,GAEAtC,EAAAsC,EAAAC,QAAAC,QAAA,WAAAC,QACAzC,EAAAsC,EAAAC,QAAAC,QAAA,UAAAC,SACAzC,EAAA,UAAA+B,YAAA,QACA/B,EAAA,uBAAA+B,YAAA,QACAW,MAAAC","file":"main.min.js","sourcesContent":["$(function () {\n\n    $('#js-jewmapHamburger').on('click', function () {\n        $('#js-jewmapHamburger').toggleClass('active');\n    })\n    \n    var ZOOM = 4;\n    var BOUNDS_RUSSIA = new L.LatLngBounds([30.0, 15.0], [78.0, 188.0]);\n    if ($(window).width() < 575) {\n        BOUNDS_RUSSIA = new L.LatLngBounds([40.0, 25.0], [35.0, 180.0]);\n    }\n\n    L.mapbox.accessToken = 'pk.eyJ1IjoiYWxpYXBrbyIsImEiOiJjangyenVmeGMwcTFjM3lvNGhsdmUzejRoIn0.zdJYMN5sxS2SJXZV2Lb3aA';\n\n    var map = L.map('map', {\n        doubleClickZoom: false,\n        zoomControl: true,\n        zoomDelta: 0.25,\n        zoomSnap: 0,\n        maxZoom: 10,\n        minZoom: 2,\n        // maxBounds: new L.LatLngBounds([10.0, 15.0],[25.0, 188.0]),\n        // zoomSnap: 0,\n        // maxBoundsViscosity: 1\n    })\n        .setView([63.674041, 99.742382], ZOOM)\n        .addLayer(L.mapbox.styleLayer('mapbox://styles/aliapko/cjzle879c057t1cn6tnldfw7p'));\n\n    map.fitBounds(BOUNDS_RUSSIA, { padding: [20, 20] });\n\n    var southWest = L.latLng(-89.98155760646617, -180),\n    northEast = L.latLng(89.99346179538875, 180);\n    var bounds = L.latLngBounds(southWest, northEast);\n\n    map.setMaxBounds(bounds);\n    map.on('drag', function() {\n        map.panInsideBounds(bounds, { animate: false });\n    });\n        \n\n    // sort cities list in menu\n    // cities.sort(function(a, b){\n    //     if(a.name < b.name) { return -1; }\n    //     if(a.name > b.name) { return 1; }\n    //     return 0;\n    // })\n\n    // cities.forEach(function (elem) {\n    //     if (elem.name === 'Санкт-Петербург') {\n    //         cities.splice(cities.indexOf(elem), 1)\n    //         cities.unshift(elem);\n    //         return false;\n    //     }\n    // })\n\n    // cities.forEach(function (elem) {\n    //     if (elem.name === 'Москва') {\n    //         cities.splice(cities.indexOf(elem), 1)\n    //         cities.unshift(elem);\n    //         return false;\n    //     }\n    // })\n\n\n    // // add menu on map\n    // window.map_menu.addMenu(map, cities);\n\n\n    // // cities without clusters\n    // var layerWithCities = L.mapbox.featureLayer();\n    // var layerWithSmallCities = L.mapbox.featureLayer();\n\n    // function onClickCity(e) {\n    //     var point = e.target._latlng\n    //     var slug = e.target.options.slug\n    //     window.map_util.flyTo(map, [point.lat, point.lng])\n    //     // window.map_util.flyTo(map, point)\n    //     $(e.target).on('click', function () {\n    //         window.location.href = \"https://\" + DOMEN + \"/administrative-units/\" + slug;\n    //     })\n    // }\n\n    // // added markers to clasters layers\n    // Array.prototype.forEach.call(cities, function (markerElem) { \n\n    //     if (markerElem['show'] === true) {\n    //         var html = '<div class=\"map-page__cluster-cities d-flex flex-column\"><div class=\"map-page__cluster-cities-icon\"></div><span class=\"map-page__cluster-cities-label\">' + markerElem.name + '</span></div>';\n    //         var marker = L.marker(markerElem.point, {\n    //             icon: L.divIcon({\n    //                 html: html,\n    //                 className: 'myclustercity'\n    //             }),\n    //             slug: markerElem.slug,\n    //         }).addTo(layerWithCities);\n    //         marker.on('click', onClickCity);\n    //     } else {\n    //         var html = '<div class=\"map-page__cluster-cities d-flex flex-column\"><div class=\"map-page__cluster-cities-icon\"></div><span class=\"map-page__cluster-cities-label\">' + markerElem.name + '</span></div>';\n    //         var marker = L.marker(markerElem.point, {\n    //             icon: L.divIcon({\n    //                 html: html,\n    //                 className: 'myclustercity'\n    //             }),\n    //             slug: markerElem.slug,\n    //         }).addTo(layerWithSmallCities);\n    //         marker.on('click', onClickCity);\n    //     }\n    // })\n\n\n\n    // // show layers\n    // map.addLayer(layerWithCities)\n\n    // var setLayer = function (zoom) {\n    //     if (zoom > 5) {\n    //         map.addLayer(layerWithSmallCities)\n    //     } else {\n    //         map.removeLayer(layerWithSmallCities)\n    //     }\n    // }\n    // setLayer(ZOOM)\n    \n    // map.on('zoomend', function(e) {\n    //     var zoom = e.target._zoom;\n    //     setLayer(zoom)\n    // });\n    \n});\n    ","$(function () {\n    var MOBILE_WIDTH = 600;\n\n    // function for hiding nav list and toggle hamburger class\n    var hideNavList = function () {\n        $('#js-navHamburger').removeClass('active');\n        $('#js-navListWrapper').slideUp();\n    }\n\n    // show active nav item\n    $('#js-navListWrapper>ul>li>a').on('click', function () {\n        $('#js-navListWrapper>ul>li>a').removeClass('active');\n        $(this).addClass('active');\n        if ($(window).width() <= MOBILE_WIDTH) {\n            hideNavList();\n        }\n    });\n\n    // show/hide nav on hamburger click\n    $('#js-navHamburger').on('click', function () {\n        $('#js-navHamburger').toggleClass('active');\n        $('#js-navListWrapper').slideToggle();\n    });\n\n    // hide nav on outside click\n    $(document).click(function(e) {\n        if ($(window).width() <= MOBILE_WIDTH) {\n            if ($(e.target).closest('#js-navListWrapper').length) return;\n            if ($(e.target).closest('#js-navHamburger').length) return;\n            hideNavList();\n            event.stopPropagation();\n        }\n    });\n\n    // show/hide nav on resize\n    $(window).on('resize', function () {\n        if ($(window).width() > MOBILE_WIDTH) {\n            $('#js-navListWrapper').show();\n            $('#js-navHamburger').removeClass('active');\n        } else {\n            hideNavList();\n        }\n    })\n\n});","$(function () {\n    \n    // show popup on nav click\n    $('#js-navListWrapper>ul>li>a').on('click', function () {\n        var popup = $(this).attr('data-popup');\n        if ($('#js-' + popup).hasClass('open')) return;\n        $('.popup').removeClass('open');\n        $('#js-jewmapHamburger').removeClass('open');\n        $('#js-' + popup).addClass('open');\n        $('#js-jewmapHamburger').addClass('open');\n    });\n\n    // hide popup on close click\n    $('.popup__close').on('click', function () {\n        $('.popup').removeClass('open');\n        $('#js-jewmapHamburger').removeClass('open');\n        $('#js-navListWrapper>ul>li>a').removeClass('active');\n    });\n\n    // hide popup on outside click\n    $(document).click(function(e) {\n        // if ($(window).width() <= MOBILE_WIDTH) {\n        if ($(e.target).closest('#js-nav').length) return;\n        if ($(e.target).closest('.popup').length) return;\n        $('.popup').removeClass('open');\n        $('#js-jewmapHamburger').removeClass('open');\n        event.stopPropagation();\n        // }\n    });\n\n});"]}